<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL语法 on JadeRong</title>
    <link>https://rrrwx.github.io/categories/sql%E8%AF%AD%E6%B3%95/</link>
    <description>Recent content in SQL语法 on JadeRong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 May 2020 10:30:48 +0800</lastBuildDate>
    
	<atom:link href="https://rrrwx.github.io/categories/sql%E8%AF%AD%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL语法之多表查询</title>
      <link>https://rrrwx.github.io/2020/%E4%BA%8C%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Sat, 16 May 2020 10:30:48 +0800</pubDate>
      
      <guid>https://rrrwx.github.io/2020/%E4%BA%8C%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</guid>
      <description>https://edu.aliyun.com/roadmap/java?spm=a2c6h.12999620.1371257.1.5a195738ZJjjex#part1
多表查询 分类 （一）合并结果集（了解）  要求被合并的表中，列的类型和列数相同 UNION：去重 UNION ALL：不去重  create table ab (a int, b varchar(50)); insert into ab values (1, &amp;#39;1&amp;#39;); insert into ab values (2, &amp;#39;2&amp;#39;); insert into ab values (3, &amp;#39;3&amp;#39;); create table cd (c int, d varchar(50)); insert into cd values (3, &amp;#39;3&amp;#39;); insert into cd values (4, &amp;#39;4&amp;#39;); insert into cd values (5, &amp;#39;5&amp;#39;); select * from ab union [all] select * from cd ; （二）连接查询 1.</description>
    </item>
    
    <item>
      <title>SQL语法之约束</title>
      <link>https://rrrwx.github.io/2020/%E4%B8%80%E7%BA%A6%E6%9D%9F/</link>
      <pubDate>Sat, 16 May 2020 08:30:48 +0800</pubDate>
      
      <guid>https://rrrwx.github.io/2020/%E4%B8%80%E7%BA%A6%E6%9D%9F/</guid>
      <description>https://edu.aliyun.com/roadmap/java?spm=a2c6h.12999620.1371257.1.5a195738ZJjjex#part1
约束 约束是使用在列上，用于约束列的
参考 https://blog.csdn.net/f45056231p/article/details/81070437
主键、外键和索引的区别？
    主键 外键 索引     定义： 唯一标识一条记录，不能有重复的，不允许为空 表的外键是另一表的主键, 外键可以有重复的, 可以是空值 该字段没有重复值，但可以有一个空值   作用： 用来保证数据完整性 用来和其他表建立联系用的 是提高查询排序的速度   个数： 主键只能有一个 一个表可以有多个外键 一个表可以有多个惟一索引    1. 主键约束（唯一标识）  关系型数据库中的一条记录中有若干个属性，若其中某一个属性组(注意是组)能唯一标识一条记录，该属性组就可以成为一个主键
  特点：唯一、非空、可引用  -- 设置主键 -- 方法一 create table stu ( sid int primary key, name varchar(50), age int ) ; -- 方法二 create table stu ( sid int, name varchar(50), age int, primary key (sid) ); -- 方法三 alter table stu add primary key(sid); -- 删除主键 alter table stu drop primary key; 2.</description>
    </item>
    
    <item>
      <title>SQL语法之DQL</title>
      <link>https://rrrwx.github.io/2020/dql%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Fri, 15 May 2020 19:30:48 +0800</pubDate>
      
      <guid>https://rrrwx.github.io/2020/dql%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/</guid>
      <description>https://edu.aliyun.com/roadmap/java?spm=a2c6h.12999620.1371257.1.5a195738ZJjjex#part1
DQL（Data Query Language） 数据查询语言，用来查询数据。
一、基本查询 1. 字段（列）查询 1）查询所有列  SELECT * FROM 表名；  2）查询指定列  SELECT 列名1 [, 列名2, &amp;hellip;] FROM 表名；  3）查询不重复记录  当查询结果中有多行记录一模一样时，只显示一行。一般在只查询一列或数列时会出现这种情况； SELECT DISTINCT* | 列名1 [, 列名2, &amp;hellip;] FROM 表名；  4) 列运算   I 数量类型的列可以做加、减、乘、除运算：
 SELECT sal*1.5 FROM emp ; SELECT sal+comm FROM emp ;    II 字符串类型可以做连续运算：
 SELECT CONCAT(&amp;lsquo;$&amp;rsquo;, sal) FROM emp ; 只能使用CONCAT来连接字符串；    III 转换NULL值：</description>
    </item>
    
    <item>
      <title>SQL语法之DML</title>
      <link>https://rrrwx.github.io/2020/dml%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Fri, 15 May 2020 17:30:48 +0800</pubDate>
      
      <guid>https://rrrwx.github.io/2020/dml%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E8%A8%80/</guid>
      <description>https://edu.aliyun.com/roadmap/java?spm=a2c6h.12999620.1371257.1.5a195738ZJjjex#part1
DML（Data Manipulation Language） 数据操作语言，用来定义数据库记录（数据）
增删改：表记录；
1. 插入数据   INSERT INTO 表名 (列名1, 列名2, &amp;hellip;) VALUES (列值1, 列值2, &amp;hellip;) [, (列值1, 列值2, &amp;hellip;), &amp;hellip;]；
 在表名后面给出要插入的列名，其他没有指定的列等同于插入null值； 在VALUES后面给出列值，值得顺序和个数与前面指定的列名对应； 例：INSERT INTO stu (number, name, age, gender) VALUES (&amp;lsquo;ITCAST_0001&amp;rsquo;, &amp;lsquo;jade&amp;rsquo;, 22, &amp;lsquo;m&amp;rsquo;);    INSERT INTO 表名 VALUES(列值1, 列值2)
 没有给出列名则说明要插入所有列； 列值的顺序与个数与表创建时给出的列顺序相同；    2. 修改数据  UPDATE 表名 SET 列名1=列值1, 列名2=列值2, 。。。 [WHERE 条件]；  条件（可选）：  条件必须是boolean类型的值或表达式； 运算符：=, !</description>
    </item>
    
    <item>
      <title>SQL语法之DDL</title>
      <link>https://rrrwx.github.io/2020/ddl%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Fri, 15 May 2020 14:30:48 +0800</pubDate>
      
      <guid>https://rrrwx.github.io/2020/ddl%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80/</guid>
      <description>https://edu.aliyun.com/roadmap/java?spm=a2c6h.12999620.1371257.1.5a195738ZJjjex#part1
DDL （Data Definition Language） 数据定义语言，用于定义数据库对象：库、表、列等
创建、删除、修改：库、表的结构；
1. 操作数据库  查看所有数据库：SHOW DATABASES 切换（选择要操作的）数据库：USE 数据库名 创建数据库：CREATE DATABASE [IF NOT EXISTS] 数据库名 [CHARSET=utf8] 删除数据库：DROP DATABASE [IF EXISTS] 数据库名 修改数据库编码：ALTER DATABASE 数据库名 CHARACTER SET utf8  2. 常用数据类型（列）   int：整型；
  double：浮点型，如double(5,2)表示最多5位，其中必须有2位小数，即最大值999.99；
  decimal：浮点型，在表达钱方面使用，不会出现精度确实问题；
  char：固定长度字符串类型，如char(255)，数据长度不足指定长度会补足到制定长度；
  varchar：可变长度字符串类型（需要至少1B来记录长度），如varchar(65535)：zhangSan；
  text(clob&amp;ndash;官方)：字符串类型 &amp;mdash; mysql方言；
分4种大小的；
  blob：字节类型；
也是分4种大小；
  date：日期类型，格式为：yyyy-MM-dd；
  time：时间类型，格式为：hh: mm: ss；
  timestamp：时间戳类型（日期+时间）；</description>
    </item>
    
    <item>
      <title>SQL语法之DCL</title>
      <link>https://rrrwx.github.io/2020/dcl%E6%95%B0%E6%8D%AE%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Fri, 15 May 2020 13:30:48 +0800</pubDate>
      
      <guid>https://rrrwx.github.io/2020/dcl%E6%95%B0%E6%8D%AE%E6%8E%A7%E5%88%B6%E8%AF%AD%E8%A8%80/</guid>
      <description>https://edu.aliyun.com/roadmap/java?spm=a2c6h.12999620.1371257.1.5a195738ZJjjex#part1
DCL（Data Control Language） 数据控制语言，用来定义用户的创建以及访问权限和安全级别；
  一个项目创建一个用户，一个项目对应的数据库只有一个;
  这个用户只对这个数据库有权限，其他数据库操作不了；
  1. 创建用户  CREATE USER 用户名@IP地址IDENTIFIED BY &amp;lsquo;密码&amp;rsquo;；  为用户指定登录的IP地址，则该用户只能在该IP上登录；   CREATE USER 用户名@&amp;rsquo;%&amp;lsquo;IDENTIFIED BY &amp;lsquo;密码&amp;rsquo;；  用户可以在任意IP地址登录；    2. 给用户授权  GRANT权限1, 权限2, &amp;hellip; ON 数据库.* TO用户名@IP地址  权限、用户、数据库； 给用户分派在指定的数据库上的指定权限； 例如：GRANT CREATE, ALTER, DROP, INSERT UPDATE, DELETE, SELECT ON mydb000.* TO user@localhost；   GRANT ALL ON mydb000.* TO user@localhost;  给指定用户分派该数据库上的所有权限；    3.</description>
    </item>
    
    <item>
      <title>SQL语法</title>
      <link>https://rrrwx.github.io/2020/sql%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Fri, 15 May 2020 08:30:48 +0800</pubDate>
      
      <guid>https://rrrwx.github.io/2020/sql%E8%AF%AD%E6%B3%95/</guid>
      <description>https://edu.aliyun.com/roadmap/java?spm=a2c6h.12999620.1371257.1.5a195738ZJjjex#part1
SQL语法 SQL（Structured Query Language）结构化查询语言
作用 客户端使用SQL来控制服务器
标准  可以单行或多行写，以分号结尾； 可使用空格和tab来增强语句的可读性； 不区分大小写，但建议大写； 由国际标准化组织（ISO）制定，对DBMS的统一操作方式（还有SQL方言：使用limit语句）  分类   DDL （Data Definition Language）：数据定义语言，用于定义数据库对象：库、表、列等
创建、删除、修改：库、表的结构 ；
  DML（Data Manipulation Language）：数据操作语言，用来定义数据库记录（数据）
增删改：表记录；
  DCL（Data Control Language）：数据控制语言，用来定义用户的创建以及访问权限和安全级别；
  DQL（Data Query Language）：数据查询语言，用来查询数据。
  </description>
    </item>
    
  </channel>
</rss>